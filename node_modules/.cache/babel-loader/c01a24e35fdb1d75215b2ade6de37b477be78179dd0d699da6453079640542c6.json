{"ast":null,"code":"// src/utils/emojiPlacement.js\nimport { produceEmojis } from '../data/produceData';\n\n// Function to get random emoji from the list\nexport const getRandomEmoji = () => {\n  const randomIndex = Math.floor(Math.random() * produceEmojis.length);\n  return produceEmojis[randomIndex];\n};\n\n// Generate a more strategic placement of emojis\nexport const generateStrategicEmojis = () => {\n  // Create an array with fewer, more strategically placed emojis\n  const strategicPositions = [\n  // Top left corner area\n  {\n    x: 5,\n    y: 5\n  }, {\n    x: 12,\n    y: 12\n  }, {\n    x: 20,\n    y: 8\n  },\n  // Top right corner area\n  {\n    x: 80,\n    y: 5\n  }, {\n    x: 88,\n    y: 12\n  }, {\n    x: 75,\n    y: 15\n  },\n  // Bottom left corner area\n  {\n    x: 8,\n    y: 80\n  }, {\n    x: 15,\n    y: 88\n  }, {\n    x: 20,\n    y: 75\n  },\n  // Bottom right corner area\n  {\n    x: 85,\n    y: 80\n  }, {\n    x: 80,\n    y: 90\n  }, {\n    x: 90,\n    y: 85\n  },\n  // Left side\n  {\n    x: 5,\n    y: 40\n  }, {\n    x: 12,\n    y: 50\n  },\n  // Right side\n  {\n    x: 90,\n    y: 45\n  }, {\n    x: 85,\n    y: 55\n  },\n  // Top edge\n  {\n    x: 35,\n    y: 5\n  }, {\n    x: 50,\n    y: 8\n  }, {\n    x: 65,\n    y: 5\n  },\n  // Bottom edge\n  {\n    x: 35,\n    y: 92\n  }, {\n    x: 55,\n    y: 88\n  }, {\n    x: 70,\n    y: 90\n  }];\n  return strategicPositions.map(position => {\n    const emoji = getRandomEmoji();\n    return {\n      ...emoji,\n      x: position.x,\n      y: position.y,\n      // Add a slight random offset to make it look more natural\n      offsetX: Math.random() * 5 - 2.5,\n      offsetY: Math.random() * 5 - 2.5\n    };\n  });\n};","map":{"version":3,"names":["produceEmojis","getRandomEmoji","randomIndex","Math","floor","random","length","generateStrategicEmojis","strategicPositions","x","y","map","position","emoji","offsetX","offsetY"],"sources":["/home/babasg/Documents/other/spanex-website/src/components/common/emojiPlacement.js"],"sourcesContent":["// src/utils/emojiPlacement.js\nimport { produceEmojis } from '../data/produceData';\n\n// Function to get random emoji from the list\nexport const getRandomEmoji = () => {\n  const randomIndex = Math.floor(Math.random() * produceEmojis.length);\n  return produceEmojis[randomIndex];\n};\n\n// Generate a more strategic placement of emojis\nexport const generateStrategicEmojis = () => {\n  // Create an array with fewer, more strategically placed emojis\n  const strategicPositions = [\n    // Top left corner area\n    { x: 5, y: 5 },\n    { x: 12, y: 12 },\n    { x: 20, y: 8 },\n    \n    // Top right corner area\n    { x: 80, y: 5 },\n    { x: 88, y: 12 },\n    { x: 75, y: 15 },\n    \n    // Bottom left corner area\n    { x: 8, y: 80 },\n    { x: 15, y: 88 },\n    { x: 20, y: 75 },\n    \n    // Bottom right corner area\n    { x: 85, y: 80 },\n    { x: 80, y: 90 },\n    { x: 90, y: 85 },\n    \n    // Left side\n    { x: 5, y: 40 },\n    { x: 12, y: 50 },\n    \n    // Right side\n    { x: 90, y: 45 },\n    { x: 85, y: 55 },\n    \n    // Top edge\n    { x: 35, y: 5 },\n    { x: 50, y: 8 },\n    { x: 65, y: 5 },\n    \n    // Bottom edge\n    { x: 35, y: 92 },\n    { x: 55, y: 88 },\n    { x: 70, y: 90 },\n  ];\n  \n  return strategicPositions.map(position => {\n    const emoji = getRandomEmoji();\n    return {\n      ...emoji,\n      x: position.x,\n      y: position.y,\n      // Add a slight random offset to make it look more natural\n      offsetX: Math.random() * 5 - 2.5,\n      offsetY: Math.random() * 5 - 2.5\n    };\n  });\n};"],"mappings":"AAAA;AACA,SAASA,aAAa,QAAQ,qBAAqB;;AAEnD;AACA,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAClC,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGL,aAAa,CAACM,MAAM,CAAC;EACpE,OAAON,aAAa,CAACE,WAAW,CAAC;AACnC,CAAC;;AAED;AACA,OAAO,MAAMK,uBAAuB,GAAGA,CAAA,KAAM;EAC3C;EACA,MAAMC,kBAAkB,GAAG;EACzB;EACA;IAAEC,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,EACd;IAAED,CAAC,EAAE,EAAE;IAAEC,CAAC,EAAE;EAAG,CAAC,EAChB;IAAED,CAAC,EAAE,EAAE;IAAEC,CAAC,EAAE;EAAE,CAAC;EAEf;EACA;IAAED,CAAC,EAAE,EAAE;IAAEC,CAAC,EAAE;EAAE,CAAC,EACf;IAAED,CAAC,EAAE,EAAE;IAAEC,CAAC,EAAE;EAAG,CAAC,EAChB;IAAED,CAAC,EAAE,EAAE;IAAEC,CAAC,EAAE;EAAG,CAAC;EAEhB;EACA;IAAED,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAG,CAAC,EACf;IAAED,CAAC,EAAE,EAAE;IAAEC,CAAC,EAAE;EAAG,CAAC,EAChB;IAAED,CAAC,EAAE,EAAE;IAAEC,CAAC,EAAE;EAAG,CAAC;EAEhB;EACA;IAAED,CAAC,EAAE,EAAE;IAAEC,CAAC,EAAE;EAAG,CAAC,EAChB;IAAED,CAAC,EAAE,EAAE;IAAEC,CAAC,EAAE;EAAG,CAAC,EAChB;IAAED,CAAC,EAAE,EAAE;IAAEC,CAAC,EAAE;EAAG,CAAC;EAEhB;EACA;IAAED,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAG,CAAC,EACf;IAAED,CAAC,EAAE,EAAE;IAAEC,CAAC,EAAE;EAAG,CAAC;EAEhB;EACA;IAAED,CAAC,EAAE,EAAE;IAAEC,CAAC,EAAE;EAAG,CAAC,EAChB;IAAED,CAAC,EAAE,EAAE;IAAEC,CAAC,EAAE;EAAG,CAAC;EAEhB;EACA;IAAED,CAAC,EAAE,EAAE;IAAEC,CAAC,EAAE;EAAE,CAAC,EACf;IAAED,CAAC,EAAE,EAAE;IAAEC,CAAC,EAAE;EAAE,CAAC,EACf;IAAED,CAAC,EAAE,EAAE;IAAEC,CAAC,EAAE;EAAE,CAAC;EAEf;EACA;IAAED,CAAC,EAAE,EAAE;IAAEC,CAAC,EAAE;EAAG,CAAC,EAChB;IAAED,CAAC,EAAE,EAAE;IAAEC,CAAC,EAAE;EAAG,CAAC,EAChB;IAAED,CAAC,EAAE,EAAE;IAAEC,CAAC,EAAE;EAAG,CAAC,CACjB;EAED,OAAOF,kBAAkB,CAACG,GAAG,CAACC,QAAQ,IAAI;IACxC,MAAMC,KAAK,GAAGZ,cAAc,CAAC,CAAC;IAC9B,OAAO;MACL,GAAGY,KAAK;MACRJ,CAAC,EAAEG,QAAQ,CAACH,CAAC;MACbC,CAAC,EAAEE,QAAQ,CAACF,CAAC;MACb;MACAI,OAAO,EAAEX,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG;MAChCU,OAAO,EAAEZ,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG;IAC/B,CAAC;EACH,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}